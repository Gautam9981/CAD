
Instructions to Compile and Run the Code (Java)

This guide outlines OS-specific steps to install Java (if not already installed), compile .java files, and run your Java program from the terminal.

Linux (by Package Manager, assuming the packages are not already installed!)

DNF / RPM (Fedora, RHEL-based)
1. Install Java Development Kit:  
   sudo dnf install java-24(or 23)-openjdk-devel
2. Compile the project:  
   javac *.java
3. Run the main class:  
   java Cli

Pacman (Arch-based (Arch Linux, Manjaro, etc))
1. Install OpenJDK:  
   sudo pacman -S jdk-openjdk
2. Compile the project:  
   javac *.java
3. Run the main class:  
   java Cli

APT (Debian-based (Debian, Ubuntu, etc))
1. Install Java Development Kit:  
   sudo apt install default-jdk
2. Compile the project:  
   javac *.java
3. Run the main class:  
   java Cli

Zypper (openSUSE)
1. Install JDK:  
   sudo zypper install java-24(or 23)-openjdk-devel
2. Compile the project:  
   javac *.java
3. Run the main class:  
   java Cli

Eopkg (Solus)
1. Install JDK:  
   sudo eopkg install openjdk-24(or 23)
2. Compile the project:  
   javac *.java
3. Run the main class:  
   java Cli

Nix (NixOS)
1. Install JDK:  
   nix-env -iA nixpkgs.openjdk
2. Compile the project:  
   javac *.java
3. Run the main class:  
   java Cli

XBPS (Void Linux)
1. Install OpenJDK:  
   sudo xbps-install -S openjdk
2. Before you compile the project, you may have to specity the PATH for the javac command and make it show up in bash, type "echo 'export JAVA_HOME=/usr/lib/jvm/java-21-openjdk' >> ~/.bashrc", then restart
3. Compile the project:  
   javac *.java
4. Run the main class:  
   java Cli

Portage (Gentoo)
1. Install JDK:  
   sudo emerge --ask dev-java/openjdk
2. Compile the project:  
   javac *.java
3. Run the main class:  
   java Cli

Slackpkg (Slackware)
1. If slackpkg is configured:  
   slackpkg install openjdk
   else:
   use the installer to get the package
2. Compile the project:  
   javac *.java
3. Run the main class:  
   java Cli

BSD (FreeBSD)
1. Install OpenJDK:  
   sudo pkg install openjdk23
2. Compile the project:  
   javac *.java
3. Run the main class:  
   java Cli

Windows

Option 1: Using WSL
Follow the same Linux-based instructions above depending on your installed WSL distribution.

Option 2: Using Windows natively (CMD or PowerShell)
1. Download and install OpenJDK from: https://jdk.java.net
2. Add bin/ from the JDK install directory to your PATH environment variable.
3. Confirm installation:  
   java -version and javac -version
4. Compile your code:  
   javac *.java
5. Run it:  
   java Cli

Option 3: Using Microsoft Visual Studio Code (with Java Extension Pack)
1. Install Visual Studio Code
2. Install Java Extension Pack
3. Open the folder with your .java files
4. Press Ctrl + Shift + B or use the play button to compile and run

macOS

Option 1: Using Xcode Command Line Tools
1. Install tools:  
   xcode-select --install
2. Install JDK:  
   brew install openjdk (or download manually)
3. Compile the project:  
   javac *.java
4. Run the main class:  
   java Cli

Option 2: Using Homebrew (Preferred)
1. Install Homebrew (if not installed):  
   /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
2. Install Java:  
   brew install openjdk
3. Add Java to your shell profile:
   export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
4. Compile:  
   javac *.java
5. Run:  
   java Cli

Note:
Once you run the application and it generates output files (e.g., geometry or CAD instructions), you may need third-party CAD software like Fusion 360, SolidWorks, FreeCAD, or similar tools to visualize them.
GUI support is not implemented yet, so this version is CLI-only.
